generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Collegiate {
  id        String   @id @default(uuid())
  teacher   String
  segment   String
  email     String
  validity  String
  updatedAt DateTime
}

model ApliedGroup {
  id                String   @id @default(uuid())
  name              String
  notice            String
  link              String
  developmentagency String
  value             String
  updatedAt         DateTime
}

model ApliedGroupContent {
  id          String @id @default(uuid())
  title       String
  description String @db.LongText
}

model Subject {
  id                  String  @id @default(uuid())
  phaseId             String
  name                String
  ch                  Int
  credits             Int
  prerequisites       String
  isElective          Boolean @default(false)
  equivalenceSubjects String  @db.Text
  phase               Phase   @relation(fields: [phaseId], references: [id])

  @@index([phaseId])
}

model Phase {
  id       String    @id @default(uuid())
  name     String
  subjects Subject[]
}

model TypesOfPublications {
  id                  String                @id @default(uuid())
  name                String
  updatedAt           DateTime
  StudentPublications StudentPublications[]
}

model StudentPublications {
  id                  String              @id @default(uuid())
  typeOfPublicationId String
  title               String
  resume              String              @db.Text
  author              String
  link                String
  updatedAt           DateTime
  typeOfPublication   TypesOfPublications @relation(fields: [typeOfPublicationId], references: [id])

  @@index([typeOfPublicationId])
}

model Teachers {
  id              String   @id @default(uuid())
  name            String
  qualification   String
  area            String
  email           String
  lattes          String
  periodOfService String
  updatedAt       DateTime
}

model Card {
  id      String    @id @default(uuid())
  groupId String
  locale  String
  info    String
  name    String
  group   CardGroup @relation(fields: [groupId], references: [id])

  @@index([groupId])
}

model CardGroup {
  id    String @id @default(uuid())
  name  String
  cards Card[]
}

model ViewsPage {
  id        String   @id @default(uuid())
  title     String   @unique(map: "title")
  info      String?
  content   String?  @db.Text
  info02    String?
  content02 String?  @db.Text
  info03    String?
  content03 String?  @db.Text
  info04    String?
  content04 String?  @db.Text
  nameLink  String?
  link      String?
  image     String?
  updatedAt DateTime
}

model Schedule {
  id        String   @id @default(uuid())
  year      String
  semester  String
  updatedAt DateTime
  link      String
}

model Events {
  id             String   @id @default(uuid())
  title          String
  info           String
  publicationDay DateTime
  image          String
  link           String
  updatedAt      DateTime @default(now())
  content        String   @db.Text
}

model Projects {
  id                String           @id @default(uuid())
  title             String
  link              String?
  updatedAt         DateTime         @default(now())
  typesOfProjectsId String
  projectArea       String
  resume            String           @db.Text
  teacherEmail      String
  teacherName       String
  teacherTel        String
  TypesOfProjects   TypesOfProjects? @relation(fields: [typesOfProjectsId], references: [id])

  @@index([typesOfProjectsId])
}

model TypesOfProjects {
  id        String     @id @default(uuid())
  name      String
  updatedAt DateTime   @default(now())
  projects  Projects[]
}

model FacultyCore {
  id        String   @id @default(uuid())
  teachers  String
  type      String
  email     String
  validity  String
  updatedAt DateTime
}

model DiscordChannels {
  id        String   @id @default(uuid())
  name      String
  link      String
  avatarUrl String
  info      String
  updatedAt DateTime
}

model Informatives {
  id        String   @id @default(uuid())
  title     String
  info      String
  content   String   @db.Text
  linkImg   String
  updatedAt DateTime
}
