generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String?
    access_token      String?
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String?
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id            String    @id @unique @default(cuid())
    username      String    @unique
    password      String    @unique @map("hashedPassword")
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

model Pages {
    id        String   @id @default(cuid())
    title     String
    info      String
    slug      String   @unique
    content   String
    image     String   @unique
    updatedAt DateTime @updatedAt
}

model Titles {
    id        String   @id @default(cuid())
    place     String
    info      String
    content   String
    updatedAt DateTime @updatedAt
}

model Images {
    id        String   @id @default(cuid())
    title     String
    info      String
    image     String   @unique
    updatedAt DateTime @updatedAt
}

model Videos {
    id        String   @id @default(cuid())
    title     String
    info      String
    video     String   @unique
    updatedAt DateTime @updatedAt
}

model Links {
    id         String   @id @default(cuid())
    title      String
    info       String
    publicLink String   @unique
    authLink   String   @unique
    updatedAt  DateTime @updatedAt
}

model TeachersInfo {
    id        String   @id @default(cuid())
    year      String
    semester  String
    content   String
    updatedAt DateTime @updatedAt
}

model Teachers {
    id        String   @id @default(cuid())
    name      String
    info      String
    image     String   @unique
    updatedAt DateTime @updatedAt
}

model AboutCourse {
    id        String   @id @default(cuid())
    title     String
    info      String?
    content   String
    image     String?   
    updatedAt DateTime @updatedAt
}